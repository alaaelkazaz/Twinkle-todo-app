[{"E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\index.js":"1","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\reportWebVitals.js":"2","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\App.js":"3","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\services\\loginService.js":"4","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\twinkle.jsx":"5","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\login.jsx":"6","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\about.jsx":"7","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\navbar.jsx":"8","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\common\\notfound.jsx":"9","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\logout.jsx":"10","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\register.jsx":"11","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\services\\httpservice.js":"12","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\services\\userService.js":"13","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\services\\notesServiece.js":"14","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\common\\input.jsx":"15","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\notesList.jsx":"16","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\noteCard.jsx":"17"},{"size":681,"mtime":1614780681593,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1320,"mtime":1615845795943,"results":"21","hashOfConfig":"19"},{"size":944,"mtime":1615843113392,"results":"22","hashOfConfig":"19"},{"size":3313,"mtime":1615846077758,"results":"23","hashOfConfig":"19"},{"size":2118,"mtime":1615932577947,"results":"24","hashOfConfig":"19"},{"size":350,"mtime":1615306850855,"results":"25","hashOfConfig":"19"},{"size":2606,"mtime":1615932725108,"results":"26","hashOfConfig":"19"},{"size":252,"mtime":1614782890979,"results":"27","hashOfConfig":"19"},{"size":261,"mtime":1615841408525,"results":"28","hashOfConfig":"19"},{"size":2197,"mtime":1615845523480,"results":"29","hashOfConfig":"19"},{"size":660,"mtime":1615589739762,"results":"30","hashOfConfig":"19"},{"size":293,"mtime":1615555373817,"results":"31","hashOfConfig":"19"},{"size":682,"mtime":1615554844832,"results":"32","hashOfConfig":"19"},{"size":545,"mtime":1615386441207,"results":"33","hashOfConfig":"19"},{"size":1281,"mtime":1615544475198,"results":"34","hashOfConfig":"19"},{"size":2136,"mtime":1615933001166,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"15i0ejb",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\index.js",[],["76","77"],"E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\reportWebVitals.js",[],"E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\App.js",[],"E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\services\\loginService.js",["78"],"import http from './httpservice';\r\nimport { apiUrl } from '../config.json';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst apiEndpoint = apiUrl + \"/login\";\r\nconst tokenKey = 'token';\r\n\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt} = await http.post(apiEndpoint, { email, password });\r\n  console.log(jwt)\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\n\r\nexport function loginWithJwt(jwt) {\r\n    localStorage.setItem(tokenKey, jwt);\r\n  }\r\n  \r\n  export function logout() {\r\n    localStorage.removeItem(tokenKey);\r\n  }\r\n  \r\n  export function getCurrentUser() {\r\n    try {\r\n      const jwt = localStorage.getItem(tokenKey);\r\n      return jwtDecode(jwt);\r\n    } catch (ex) {\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  export function getJwt() {\r\n    return localStorage.getItem(tokenKey);\r\n  }\r\n  \r\n  export default {\r\n    login,\r\n    loginWithJwt,\r\n    logout,\r\n    getCurrentUser,\r\n    getJwt\r\n  };\r\n  ","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\twinkle.jsx",["79","80"],"import React, { Component } from 'react';\r\nimport NoteList from './notesList';\r\nimport http from '../services/httpservice';\r\nimport { getNotes , deleteNote, saveNote , updateNote } from '../services/notesServiece';\r\nclass Twinkle extends Component {\r\n    state = { \r\n        notes:[],\r\n        currentItem:{\r\n            _id:'',\r\n            content:''\r\n        }\r\n     }\r\n\r\n    async componentDidMount(){\r\n        // supose to return an array \r\n        let {data}=  await getNotes();\r\n        const notes =[...data]\r\n        this.setState({notes:notes})\r\n    };\r\n\r\n    handleinput = (e) =>{\r\n        this.setState({currentItem:{content:e.target.value, _id: Date.now()}})\r\n    };\r\n    handleEdit = async(e)=>{\r\n        let item = this.state.notes.filter(item => item._id === e._id);\r\n        item.content = e.newval;\r\n        //console.log(item.content);\r\n        let notes = this.state.notes;\r\n        notes.filter(note =>{\r\n            if (note._id === e._id){\r\n                note.content= item.content\r\n            }\r\n        })\r\n        this.setState({notes});\r\n        // call the server to save the update \r\n        await updateNote(item)\r\n    };\r\n    handleDelete =async (noteId) =>{\r\n        // optemistic approch for deletion \r\n        // UI Deletion \r\n        const prevStateNotes = this.state.notes\r\n        const notes = this.state.notes.filter(note => note._id !== noteId);\r\n        this.setState({notes: notes});\r\n        try {           \r\n         await deleteNote(noteId)\r\n            \r\n        } catch (error) {\r\n            if ( error && error.response === 404)\r\n            console.log(\"this note already deleted \") \r\n            this.setState({notes: prevStateNotes})\r\n        }\r\n     };\r\n     // call the server and save the new updata to it u\\\r\n    handleSaveNote =async(e) =>{\r\n        // to prevent the relod on submit hit \r\n        e.preventDefault();\r\n        const prevstate= this.state.notes\r\n        let newitem= this.state.currentItem;\r\n        try {\r\n            const {data} = await saveNote(newitem)\r\n            console.log(data)            // set the id \r\n            newitem._id =`${data}`\r\n            const cpstate= [...this.state.notes,newitem];\r\n            this.setState({notes:cpstate,currentItem:{_id:'',content:''}});\r\n\r\n        } catch (error) {\r\n            if( error && error.response === 404) console.log('error in sumbaiton of the note ')\r\n            this.state({notes : prevstate})\r\n        } \r\n    };\r\n    //style={{backgroundColor:\"rgba(0,0,0,.3)\"}}\r\n    render() { \r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container mt-5 \">\r\n                    <form className=\"input-group\"\r\n                     onSubmit={this.handleSaveNote}>\r\n                        <input onChange={this.handleinput} className=\"form-control\" type=\"text\" placeholder=\"Add a todo ...\" value={this.state.currentItem.content}></input>\r\n                        <button  className=\"btn btn-sm btn-success\" type=\"submit\">Add</button>\r\n                    </form>\r\n                    <NoteList \r\n                    notes={this.state.notes} \r\n                    onDelete={this.handleDelete} \r\n                    setEdit={this.handleEdit} />\r\n                </div>\r\n\r\n            </React.Fragment>\r\n          );\r\n    }\r\n}\r\n \r\nexport default Twinkle;","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\login.jsx",[],"E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\about.jsx",[],"E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\navbar.jsx",[],"E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\common\\notfound.jsx",[],"E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\logout.jsx",["81"],"import React, { Component } from 'react';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        localStorage.removeItem('token');\r\n        window.location ='/';\r\n    }\r\n    render() { \r\n        return null;\r\n    }\r\n}\r\n \r\nexport default Logout;","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\register.jsx",[],"E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\services\\httpservice.js",["82"],"import axios from \"axios\";\r\n//import { toast } from \"react-toastify\";\r\n// an interceptors to error \r\naxios.interceptors.response.use(null, error => {\r\n    const expectedError =\r\n      error.response &&\r\n      error.response.status >= 400 &&\r\n      error.response.status < 500;\r\n  \r\n    if (!expectedError) {\r\n      console.log('error')\r\n      //toast.error(\"An unexpected error occurrred.\");\r\n    }\r\n  \r\n    return Promise.reject(error);\r\n  });\r\n\r\n  function setJwt(jwt) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n  }\r\nexport default{\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    setJwt\r\n};","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\services\\userService.js",[],"E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\services\\notesServiece.js",[],"E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\common\\input.jsx",[],"E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\notesList.jsx",["83"],"import React, { Component } from 'react';\r\nimport NoteCard from './noteCard';\r\nimport { Container } from 'react-bootstrap';\r\nimport FlipMove from 'react-flip-move';\r\nclass NoteList extends Component {\r\n    \r\n     // componentWillMount --> get the notes list from the props passed to the comp \r\n     // from the parent componenent  \r\n    // <FlipMove duration={500} easing=\"ease-in-out\" > // for animation \r\n  \r\n    render() { \r\n        const { length : count } = this.props.notes;\r\n        if( count === 0) return ( \r\n            <h1 className=\"text-center\">You have got no notes to display. </h1>\r\n        )\r\n\r\n        return (\r\n           <React.Fragment>\r\n               <h1 className=\"text-center mt-3 mb-3\">You have got {count} notes. </h1>\r\n               <Container className=\"row flexRow\">\r\n               { this.props.notes.map(note =>( \r\n               <NoteCard \r\n               className=\"colXs3\"\r\n               key={note._id}\r\n               value ={note.content}\r\n               onDelete={()=>this.props.onDelete(note._id)}\r\n               id={note._id}\r\n               setEdit={this.props.setEdit}\r\n               />\r\n               ))};\r\n              \r\n               </Container>\r\n           </React.Fragment>\r\n          );\r\n    }\r\n}\r\n \r\nexport default NoteList;","E:\\twinkle\\Twinkle-todo-app\\Frontend\\src\\components\\noteCard.jsx",["84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":39,"column":3,"nodeType":"91","endLine":45,"endColumn":5},{"ruleId":"92","severity":1,"message":"93","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":12},{"ruleId":"96","severity":1,"message":"97","line":29,"column":27,"nodeType":"98","messageId":"99","endLine":29,"endColumn":29},{"ruleId":"92","severity":1,"message":"100","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":13},{"ruleId":"89","severity":1,"message":"90","line":21,"column":1,"nodeType":"91","endLine":27,"endColumn":3},{"ruleId":"92","severity":1,"message":"101","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":16},{"ruleId":"92","severity":1,"message":"102","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":17},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'http' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'React' is defined but never used.","'FlipMove' is defined but never used.","'Draggable' is defined but never used.","no-global-assign","no-unsafe-negation"]